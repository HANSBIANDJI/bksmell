{"version":3,"file":"Register-Cmuio0l4.js","sources":["../../src/pages/Register.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card } from '@/components/ui/card';\nimport { Mail, Lock, User, Loader2 } from 'lucide-react';\nimport { useToast } from '@/components/ui/use-toast';\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const validateForm = () => {\n    const newErrors = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    let isValid = true;\n\n    // Validation prénom\n    if (!formData.firstName) {\n      newErrors.firstName = 'Le prénom est requis';\n      isValid = false;\n    }\n\n    // Validation nom\n    if (!formData.lastName) {\n      newErrors.lastName = 'Le nom est requis';\n      isValid = false;\n    }\n\n    // Validation email\n    if (!formData.email) {\n      newErrors.email = 'L\\'email est requis';\n      isValid = false;\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Email invalide';\n      isValid = false;\n    }\n\n    // Validation téléphone\n    if (!formData.phone) {\n      newErrors.phone = 'Le téléphone est requis';\n      isValid = false;\n    }\n\n    // Validation mot de passe\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n      isValid = false;\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 6 caractères';\n      isValid = false;\n    }\n\n    // Validation confirmation mot de passe\n    if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Les mots de passe ne correspondent pas';\n      isValid = false;\n    }\n\n    setErrors(newErrors);\n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      toast({\n        variant: \"destructive\",\n        title: \"Erreur\",\n        description: \"Veuillez corriger les erreurs dans le formulaire\"\n      });\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      // Simuler l'inscription\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      \n      // Vérifier si l'email existe déjà\n      if (users.some((user: any) => user.email === formData.email)) {\n        toast({\n          variant: \"destructive\",\n          title: \"Erreur\",\n          description: \"Cet email est déjà utilisé\"\n        });\n        return;\n      }\n\n      // Créer le nouvel utilisateur\n      const newUser = {\n        id: Date.now().toString(),\n        ...formData,\n        role: 'CLIENT'\n      };\n\n      // Sauvegarder l'utilisateur\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\n\n      toast({\n        title: \"Inscription réussie\",\n        description: \"Votre compte a été créé avec succès\"\n      });\n\n      navigate('/profile');\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Erreur\",\n        description: \"Une erreur est survenue lors de l'inscription\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-purple-50 to-white flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md p-8\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-2xl font-bold\">Créer un compte</h1>\n          <p className=\"text-sm text-muted-foreground mt-2\">\n            Rejoignez BABISMELL pour profiter de nos services\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"firstName\">Prénom</Label>\n              <div className=\"relative\">\n                <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  id=\"firstName\"\n                  value={formData.firstName}\n                  onChange={(e) => setFormData({ ...formData, firstName: e.target.value })}\n                  className={`pl-10 ${errors.firstName ? 'border-red-500' : ''}`}\n                  disabled={isLoading}\n                  required\n                />\n              </div>\n              {errors.firstName && (\n                <p className=\"text-sm text-red-500\">{errors.firstName}</p>\n              )}\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"lastName\">Nom</Label>\n              <div className=\"relative\">\n                <User className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  id=\"lastName\"\n                  value={formData.lastName}\n                  onChange={(e) => setFormData({ ...formData, lastName: e.target.value })}\n                  className={`pl-10 ${errors.lastName ? 'border-red-500' : ''}`}\n                  disabled={isLoading}\n                  required\n                />\n              </div>\n              {errors.lastName && (\n                <p className=\"text-sm text-red-500\">{errors.lastName}</p>\n              )}\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"email\">Email</Label>\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={formData.email}\n                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                className={`pl-10 ${errors.email ? 'border-red-500' : ''}`}\n                disabled={isLoading}\n                required\n              />\n            </div>\n            {errors.email && (\n              <p className=\"text-sm text-red-500\">{errors.email}</p>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"phone\">Téléphone</Label>\n            <div className=\"relative\">\n              <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\">+225</span>\n              <Input\n                id=\"phone\"\n                type=\"tel\"\n                value={formData.phone}\n                onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                className={`pl-16 ${errors.phone ? 'border-red-500' : ''}`}\n                placeholder=\"XX XX XX XX XX\"\n                disabled={isLoading}\n                required\n              />\n            </div>\n            {errors.phone && (\n              <p className=\"text-sm text-red-500\">{errors.phone}</p>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"password\">Mot de passe</Label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={formData.password}\n                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                className={`pl-10 ${errors.password ? 'border-red-500' : ''}`}\n                disabled={isLoading}\n                required\n                minLength={6}\n              />\n            </div>\n            {errors.password && (\n              <p className=\"text-sm text-red-500\">{errors.password}</p>\n            )}\n          </div>\n\n          <div className=\"space-y-2\">\n            <Label htmlFor=\"confirmPassword\">Confirmer le mot de passe</Label>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n              <Input\n                id=\"confirmPassword\"\n                type=\"password\"\n                value={formData.confirmPassword}\n                onChange={(e) => setFormData({ ...formData, confirmPassword: e.target.value })}\n                className={`pl-10 ${errors.confirmPassword ? 'border-red-500' : ''}`}\n                disabled={isLoading}\n                required\n                minLength={6}\n              />\n            </div>\n            {errors.confirmPassword && (\n              <p className=\"text-sm text-red-500\">{errors.confirmPassword}</p>\n            )}\n          </div>\n\n          <Button \n            type=\"submit\" \n            className=\"w-full\" \n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <>\n                <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                Inscription en cours...\n              </>\n            ) : (\n              'S\\'inscrire'\n            )}\n          </Button>\n\n          <p className=\"text-center text-sm text-gray-600\">\n            Déjà un compte ?{' '}\n            <Link to=\"/login\" className=\"text-purple-600 hover:text-purple-700\">\n              Se connecter\n            </Link>\n          </p>\n        </form>\n      </Card>\n    </div>\n  );\n}"],"names":["Register","navigate","useNavigate","toast","useToast","isLoading","setIsLoading","useState","formData","setFormData","errors","setErrors","validateForm","newErrors","isValid","handleSubmit","e","users","user","newUser","jsxs","Card","jsx","Label","User","Input","Mail","Lock","Button","Fragment","Loader2","Link"],"mappings":"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"}