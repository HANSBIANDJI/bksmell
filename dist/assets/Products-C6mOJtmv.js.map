{"version":3,"file":"Products-C6mOJtmv.js","sources":["../../src/components/ImageUpload.tsx","../../src/pages/admin/Products.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Upload, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ninterface ImageUploadProps {\n  value: string;\n  onChange: (url: string) => void;\n}\n\nexport function ImageUpload({ value, onChange }: ImageUploadProps) {\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    try {\n      const file = acceptedFiles[0];\n      if (!file) return;\n\n      // Create a temporary URL for preview\n      const objectUrl = URL.createObjectURL(file);\n      onChange(objectUrl);\n\n      // In a real app, you would upload to a server here\n      // For now, we'll just use the object URL\n      console.log('File selected:', file.name);\n\n    } catch (error) {\n      console.error('Error handling file:', error);\n    }\n  }, [onChange]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'image/*': ['.jpeg', '.jpg', '.png', '.webp']\n    },\n    maxSize: 5 * 1024 * 1024,\n    multiple: false\n  });\n\n  return (\n    <div className=\"space-y-4\">\n      <div\n        {...getRootProps()}\n        className={`border-2 border-dashed rounded-lg p-4 text-center cursor-pointer transition-colors ${\n          isDragActive ? 'border-purple-500 bg-purple-50' : 'border-gray-300 hover:border-purple-500'\n        }`}\n      >\n        <input {...getInputProps()} />\n        {value ? (\n          <div className=\"relative\">\n            <img\n              src={value}\n              alt=\"Preview\"\n              className=\"mx-auto h-48 object-cover rounded-lg\"\n            />\n            <Button\n              variant=\"destructive\"\n              size=\"icon\"\n              className=\"absolute top-2 right-2\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onChange('');\n              }}\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        ) : (\n          <div className=\"flex flex-col items-center\">\n            <Upload className=\"h-8 w-8 text-gray-400 mb-2\" />\n            <p className=\"text-sm text-gray-500\">\n              {isDragActive\n                ? 'Déposez l\\'image ici'\n                : 'Glissez une image ou cliquez pour sélectionner'}\n            </p>\n            <p className=\"text-xs text-gray-400 mt-1\">\n              PNG, JPG ou WEBP jusqu'à 5MB\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","import { useState } from 'react';\nimport { useAdmin } from '@/contexts/AdminContext';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Plus, Search, Edit, Trash2 } from 'lucide-react';\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { ImageUpload } from '@/components/ImageUpload';\n\nconst CATEGORIES = ['Pour Elle', 'Pour Lui', 'Unisexe'];\n\nexport default function Products() {\n  const { products, brands, addProduct, updateProduct, deleteProduct } = useAdmin();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isAddDialogOpen, setIsAddDialogOpen] = useState(false);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState<any>(null);\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    brand: '',\n    price: 0,\n    category: '',\n    description: '',\n    image: '',\n    isNew: false,\n    isOnSale: false,\n    discount: 0,\n    stock: 0,\n    isFeatured: false\n  });\n\n  const activeBrands = brands.filter(brand => brand.active).map(brand => brand.name);\n\n  const filteredProducts = products.filter(product =>\n    product.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    product.brand.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const handleAddProduct = async () => {\n    try {\n      await addProduct(newProduct);\n      setIsAddDialogOpen(false);\n      setNewProduct({\n        name: '',\n        brand: '',\n        price: 0,\n        category: '',\n        description: '',\n        image: '',\n        isNew: false,\n        isOnSale: false,\n        discount: 0,\n        stock: 0,\n        isFeatured: false\n      });\n    } catch (error) {\n      console.error('Error adding product:', error);\n    }\n  };\n\n  const handleEditProduct = async () => {\n    if (editingProduct) {\n      try {\n        await updateProduct(editingProduct.id, editingProduct);\n        setIsEditDialogOpen(false);\n        setEditingProduct(null);\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    }\n  };\n\n  const handleDeleteProduct = async (id: string) => {\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer ce produit ?')) {\n      try {\n        await deleteProduct(id);\n      } catch (error) {\n        console.error('Error deleting product:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">Produits</h1>\n          <p className=\"text-muted-foreground\">\n            Gérez votre catalogue de produits\n          </p>\n        </div>\n        <Button onClick={() => setIsAddDialogOpen(true)}>\n          <Plus className=\"mr-2 h-4 w-4\" />\n          Ajouter un produit\n        </Button>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            placeholder=\"Rechercher un produit...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>Nom</TableHead>\n              <TableHead>Marque</TableHead>\n              <TableHead>Catégorie</TableHead>\n              <TableHead>Prix</TableHead>\n              <TableHead>Stock</TableHead>\n              <TableHead>Statut</TableHead>\n              <TableHead className=\"text-right\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredProducts.map((product) => (\n              <TableRow key={product.id}>\n                <TableCell className=\"font-medium\">{product.name}</TableCell>\n                <TableCell>{product.brand}</TableCell>\n                <TableCell>{product.category}</TableCell>\n                <TableCell>{product.price.toLocaleString()} FCFA</TableCell>\n                <TableCell>{product.stock}</TableCell>\n                <TableCell>\n                  <div className=\"flex gap-2\">\n                    {product.isNew && <Badge>Nouveau</Badge>}\n                    {product.isOnSale && <Badge variant=\"destructive\">-{product.discount}%</Badge>}\n                    {product.isFeatured && <Badge variant=\"secondary\">En avant</Badge>}\n                  </div>\n                </TableCell>\n                <TableCell className=\"text-right\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => {\n                      setEditingProduct(product);\n                      setIsEditDialogOpen(true);\n                    }}\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </Button>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    className=\"text-red-600\"\n                    onClick={() => handleDeleteProduct(product.id)}\n                  >\n                    <Trash2 className=\"h-4 w-4\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Add Product Dialog */}\n      <Dialog open={isAddDialogOpen} onOpenChange={setIsAddDialogOpen}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Ajouter un produit</DialogTitle>\n          </DialogHeader>\n          <div className=\"grid gap-4 py-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"name\">Nom</Label>\n                <Input\n                  id=\"name\"\n                  value={newProduct.name}\n                  onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"brand\">Marque</Label>\n                <Select\n                  value={newProduct.brand}\n                  onValueChange={(value) => setNewProduct({ ...newProduct, brand: value })}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Sélectionner une marque\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {activeBrands.map((brand) => (\n                      <SelectItem key={brand} value={brand}>\n                        {brand}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"price\">Prix</Label>\n                <Input\n                  id=\"price\"\n                  type=\"number\"\n                  value={newProduct.price}\n                  onChange={(e) => setNewProduct({ ...newProduct, price: Number(e.target.value) })}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"category\">Catégorie</Label>\n                <Select\n                  value={newProduct.category}\n                  onValueChange={(value) => setNewProduct({ ...newProduct, category: value })}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Sélectionner une catégorie\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {CATEGORIES.map((category) => (\n                      <SelectItem key={category} value={category}>\n                        {category}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div>\n              <Label htmlFor=\"description\">Description</Label>\n              <Textarea\n                id=\"description\"\n                value={newProduct.description}\n                onChange={(e) => setNewProduct({ ...newProduct, description: e.target.value })}\n              />\n            </div>\n\n            <div>\n              <Label htmlFor=\"image\">Image du produit</Label>\n              <ImageUpload\n                value={newProduct.image}\n                onChange={(url) => setNewProduct({ ...newProduct, image: url })}\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <Label htmlFor=\"stock\">Stock</Label>\n                <Input\n                  id=\"stock\"\n                  type=\"number\"\n                  value={newProduct.stock}\n                  onChange={(e) => setNewProduct({ ...newProduct, stock: Number(e.target.value) })}\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"discount\">Réduction (%)</Label>\n                <Input\n                  id=\"discount\"\n                  type=\"number\"\n                  value={newProduct.discount}\n                  onChange={(e) => setNewProduct({ ...newProduct, discount: Number(e.target.value) })}\n                  disabled={!newProduct.isOnSale}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex items-center gap-8\">\n              <div className=\"flex items-center gap-2\">\n                <Switch\n                  checked={newProduct.isNew}\n                  onCheckedChange={(checked) => setNewProduct({ ...newProduct, isNew: checked })}\n                />\n                <Label>Nouveau produit</Label>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Switch\n                  checked={newProduct.isOnSale}\n                  onCheckedChange={(checked) => setNewProduct({ ...newProduct, isOnSale: checked })}\n                />\n                <Label>En promotion</Label>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Switch\n                  checked={newProduct.isFeatured}\n                  onCheckedChange={(checked) => setNewProduct({ ...newProduct, isFeatured: checked })}\n                />\n                <Label>Mettre en avant</Label>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-end gap-4\">\n            <Button variant=\"outline\" onClick={() => setIsAddDialogOpen(false)}>\n              Annuler\n            </Button>\n            <Button onClick={handleAddProduct}>Ajouter</Button>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      {/* Edit Product Dialog */}\n      <Dialog open={isEditDialogOpen} onOpenChange={setIsEditDialogOpen}>\n        {editingProduct && (\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>Modifier le produit</DialogTitle>\n            </DialogHeader>\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"edit-name\">Nom</Label>\n                  <Input\n                    id=\"edit-name\"\n                    value={editingProduct.name}\n                    onChange={(e) => setEditingProduct({\n                      ...editingProduct,\n                      name: e.target.value\n                    })}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-brand\">Marque</Label>\n                  <Select\n                    value={editingProduct.brand}\n                    onValueChange={(value) => setEditingProduct({\n                      ...editingProduct,\n                      brand: value\n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Sélectionner une marque\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {activeBrands.map((brand) => (\n                        <SelectItem key={brand} value={brand}>\n                          {brand}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"edit-price\">Prix</Label>\n                  <Input\n                    id=\"edit-price\"\n                    type=\"number\"\n                    value={editingProduct.price}\n                    onChange={(e) => setEditingProduct({\n                      ...editingProduct,\n                      price: Number(e.target.value)\n                    })}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-category\">Catégorie</Label>\n                  <Select\n                    value={editingProduct.category}\n                    onValueChange={(value) => setEditingProduct({\n                      ...editingProduct,\n                      category: value\n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Sélectionner une catégorie\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {CATEGORIES.map((category) => (\n                        <SelectItem key={category} value={category}>\n                          {category}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"edit-description\">Description</Label>\n                <Textarea\n                  id=\"edit-description\"\n                  value={editingProduct.description}\n                  onChange={(e) => setEditingProduct({\n                    ...editingProduct,\n                    description: e.target.value\n                  })}\n                />\n              </div>\n\n              <div>\n                <Label htmlFor=\"edit-image\">Image du produit</Label>\n                <ImageUpload\n                  value={editingProduct.image}\n                  onChange={(url) => setEditingProduct({\n                    ...editingProduct,\n                    image: url\n                  })}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <Label htmlFor=\"edit-stock\">Stock</Label>\n                  <Input\n                    id=\"edit-stock\"\n                    type=\"number\"\n                    value={editingProduct.stock}\n                    onChange={(e) => setEditingProduct({\n                      ...editingProduct,\n                      stock: Number(e.target.value)\n                    })}\n                  />\n                </div>\n                <div>\n                  <Label htmlFor=\"edit-discount\">Réduction (%)</Label>\n                  <Input\n                    id=\"edit-discount\"\n                    type=\"number\"\n                    value={editingProduct.discount}\n                    onChange={(e) => setEditingProduct({\n                      ...editingProduct,\n                      discount: Number(e.target.value)\n                    })}\n                    disabled={!editingProduct.isOnSale}\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center gap-8\">\n                <div className=\"flex items-center gap-2\">\n                  <Switch\n                    checked={editingProduct.isNew}\n                    onCheckedChange={(checked) => setEditingProduct({\n                      ...editingProduct,\n                      isNew: checked\n                    })}\n                  />\n                  <Label>Nouveau produit</Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Switch\n                    checked={editingProduct.isOnSale}\n                    onCheckedChange={(checked) => setEditingProduct({\n                      ...editingProduct,\n                      isOnSale: checked\n                    })}\n                  />\n                  <Label>En promotion</Label>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Switch\n                    checked={editingProduct.isFeatured}\n                    onCheckedChange={(checked) => setEditingProduct({\n                      ...editingProduct,\n                      isFeatured: checked\n                    })}\n                  />\n                  <Label>Mettre en avant</Label>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex justify-end gap-4\">\n              <Button variant=\"outline\" onClick={() => setIsEditDialogOpen(false)}>\n                Annuler\n              </Button>\n              <Button onClick={handleEditProduct}>Enregistrer</Button>\n            </div>\n          </DialogContent>\n        )}\n      </Dialog>\n    </div>\n  );\n}"],"names":["ImageUpload","value","onChange","onDrop","useCallback","acceptedFiles","file","objectUrl","error","getRootProps","getInputProps","isDragActive","useDropzone","jsx","jsxs","Button","e","X","Upload","CATEGORIES","Products","products","brands","addProduct","updateProduct","deleteProduct","useAdmin","searchTerm","setSearchTerm","useState","isAddDialogOpen","setIsAddDialogOpen","isEditDialogOpen","setIsEditDialogOpen","editingProduct","setEditingProduct","newProduct","setNewProduct","activeBrands","brand","filteredProducts","product","handleAddProduct","handleEditProduct","handleDeleteProduct","id","Plus","Search","Input","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","Badge","Edit","Trash2","Dialog","DialogContent","DialogHeader","DialogTitle","Label","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","category","Textarea","url","Switch","checked"],"mappings":"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"}