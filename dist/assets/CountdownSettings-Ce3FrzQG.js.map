{"version":3,"file":"CountdownSettings-Ce3FrzQG.js","sources":["../../src/lib/utils/date.ts","../../src/pages/admin/CountdownSettings.tsx"],"sourcesContent":["import { format, parseISO, isValid, addDays } from 'date-fns';\nimport { fr } from 'date-fns/locale';\n\nexport function formatDate(date: string | Date, formatStr = \"dd/MM/yyyy 'à' HH:mm\") {\n  try {\n    const dateObj = typeof date === 'string' ? parseISO(date) : date;\n    if (!isValid(dateObj)) {\n      throw new Error('Invalid date');\n    }\n    return format(dateObj, formatStr, { locale: fr });\n  } catch (error) {\n    console.error('Error formatting date:', error);\n    return '';\n  }\n}\n\nexport function validateDate(dateStr: string): boolean {\n  try {\n    const date = new Date(dateStr);\n    return isValid(date) && date > new Date();\n  } catch {\n    return false;\n  }\n}\n\nexport function getDefaultEndDate(): string {\n  return addDays(new Date(), 3).toISOString();\n}\n\nexport function formatDateForInput(dateStr: string): string {\n  try {\n    const date = parseISO(dateStr);\n    if (!isValid(date)) {\n      return new Date().toISOString().slice(0, 16);\n    }\n    return date.toISOString().slice(0, 16);\n  } catch {\n    return new Date().toISOString().slice(0, 16);\n  }\n}","import { useState, useEffect } from 'react';\nimport { useCountdown } from '@/contexts/CountdownContext';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\nimport { Card } from '@/components/ui/card';\nimport { Timer } from 'lucide-react';\nimport { CountdownTimer } from '@/components/CountdownTimer';\nimport { formatDate, formatDateForInput, validateDate } from '@/lib/utils/date';\n\nexport default function CountdownSettings() {\n  const { settings, updateSettings, isLoading } = useCountdown();\n  \n  const [formData, setFormData] = useState({\n    isEnabled: settings.isEnabled,\n    endDate: formatDateForInput(settings.endDate),\n    title: settings.title,\n    description: settings.description\n  });\n\n  useEffect(() => {\n    setFormData({\n      isEnabled: settings.isEnabled,\n      endDate: formatDateForInput(settings.endDate),\n      title: settings.title,\n      description: settings.description\n    });\n  }, [settings]);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    try {\n      if (!validateDate(formData.endDate)) {\n        throw new Error('La date de fin doit être supérieure à la date actuelle');\n      }\n\n      await updateSettings({\n        ...formData,\n        endDate: new Date(formData.endDate).toISOString()\n      });\n    } catch (error) {\n      console.error('Error updating countdown:', error);\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <div>\n          <h1 className=\"text-2xl font-bold\">Compte à rebours</h1>\n          <p className=\"text-muted-foreground\">\n            Gérez les paramètres du compte à rebours\n          </p>\n        </div>\n      </div>\n\n      <div className=\"grid gap-8 md:grid-cols-2\">\n        <Card className=\"p-6\">\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <Label htmlFor=\"isEnabled\">Activer le compte à rebours</Label>\n              <Switch\n                id=\"isEnabled\"\n                checked={formData.isEnabled}\n                onCheckedChange={(checked) => setFormData(prev => ({ ...prev, isEnabled: checked }))}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"title\">Titre</Label>\n              <Input\n                id=\"title\"\n                value={formData.title}\n                onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n                placeholder=\"ex: Vente Flash\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"description\">Description</Label>\n              <Input\n                id=\"description\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                placeholder=\"ex: Profitez de nos offres exceptionnelles\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"endDate\">Date de fin</Label>\n              <Input\n                id=\"endDate\"\n                type=\"datetime-local\"\n                value={formData.endDate}\n                onChange={(e) => setFormData(prev => ({ ...prev, endDate: e.target.value }))}\n                min={new Date().toISOString().slice(0, 16)}\n              />\n            </div>\n\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? 'Mise à jour...' : 'Enregistrer les modifications'}\n            </Button>\n          </form>\n        </Card>\n\n        <Card className=\"p-6\">\n          <h2 className=\"text-lg font-semibold mb-4\">Aperçu</h2>\n          <div className=\"bg-gradient-to-r from-purple-600 to-purple-500 p-6 rounded-xl text-white\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Timer className=\"h-5 w-5\" />\n              <h3 className=\"text-xl font-bold\">{formData.title}</h3>\n            </div>\n            <p className=\"text-sm text-center mb-4\">{formData.description}</p>\n            {formData.isEnabled && (\n              <CountdownTimer \n                endDate={new Date(formData.endDate).toISOString()}\n                isActive={formData.isEnabled} \n              />\n            )}\n          </div>\n          <p className=\"text-sm text-gray-500 mt-4 text-center\">\n            Le compte à rebours se terminera le {formatDate(formData.endDate)}\n          </p>\n        </Card>\n      </div>\n    </div>\n  );\n}"],"names":["formatDate","date","formatStr","dateObj","parseISO","isValid","format","fr","error","validateDate","dateStr","formatDateForInput","CountdownSettings","settings","updateSettings","isLoading","useCountdown","formData","setFormData","useState","useEffect","handleSubmit","e","jsxs","jsx","Card","Label","Switch","checked","prev","Input","Button","Timer","CountdownTimer"],"mappings":"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"}