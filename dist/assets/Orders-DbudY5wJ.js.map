{"version":3,"file":"Orders-DbudY5wJ.js","sources":["../../node_modules/lucide-react/dist/esm/icons/eye.js","../../src/pages/admin/Orders.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Eye = createLucideIcon(\"Eye\", [\n  [\"path\", { d: \"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\", key: \"rwhkz3\" }],\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }]\n]);\n\nexport { Eye as default };\n//# sourceMappingURL=eye.js.map\n","import { useState } from 'react';\nimport { useGlobalStore } from '@/stores/globalStore';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport { Search, Eye } from 'lucide-react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card } from '@/components/ui/card';\nimport { Separator } from '@/components/ui/separator';\nimport { format } from 'date-fns';\nimport { fr } from 'date-fns/locale';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useOrder } from '@/contexts/OrderContext';\n\nconst statusColors = {\n  PENDING: 'bg-yellow-100 text-yellow-800',\n  PROCESSING: 'bg-blue-100 text-blue-800',\n  SHIPPING: 'bg-purple-100 text-purple-800',\n  COMPLETED: 'bg-green-100 text-green-800',\n  CANCELLED: 'bg-red-100 text-red-800'\n};\n\nconst statusLabels = {\n  PENDING: 'En attente',\n  PROCESSING: 'En préparation',\n  SHIPPING: 'En livraison',\n  COMPLETED: 'Livrée',\n  CANCELLED: 'Annulée'\n};\n\nexport default function AdminOrders() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedOrder, setSelectedOrder] = useState<any>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const orders = useGlobalStore(state => state.orders);\n  const { updateOrderStatus } = useOrder();\n  const { toast } = useToast();\n\n  const filteredOrders = orders.filter(order =>\n    order.shippingAddress.fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    String(order.id).includes(searchTerm)\n  );\n\n  const handleStatusUpdate = async (orderId: string, newStatus: string) => {\n    try {\n      await updateOrderStatus(orderId, newStatus);\n      toast({\n        title: \"Statut mis à jour\",\n        description: \"Le statut de la commande a été mis à jour avec succès\"\n      });\n      setIsDialogOpen(false);\n    } catch (error) {\n      toast({\n        variant: \"destructive\",\n        title: \"Erreur\",\n        description: \"Impossible de mettre à jour le statut de la commande\"\n      });\n    }\n  };\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold\">Commandes</h1>\n        <p className=\"text-muted-foreground\">\n          Gérez les commandes de vos clients\n        </p>\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"relative\">\n          <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-400\" />\n          <Input\n            placeholder=\"Rechercher une commande...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      </div>\n\n      <div className=\"bg-white rounded-lg border\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>N° Commande</TableHead>\n              <TableHead>Client</TableHead>\n              <TableHead>Date</TableHead>\n              <TableHead>Total</TableHead>\n              <TableHead>Statut</TableHead>\n              <TableHead className=\"text-right\">Actions</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredOrders.map((order) => (\n              <TableRow key={order.id}>\n                <TableCell className=\"font-medium\">#{String(order.id).padStart(4, '0')}</TableCell>\n                <TableCell>\n                  <div>\n                    <p className=\"font-medium\">{order.shippingAddress.fullName}</p>\n                    <p className=\"text-sm text-gray-500\">{order.shippingAddress.phone}</p>\n                  </div>\n                </TableCell>\n                <TableCell>\n                  {format(new Date(order.createdAt), 'PPp', { locale: fr })}\n                </TableCell>\n                <TableCell>{order.total.toLocaleString()} FCFA</TableCell>\n                <TableCell>\n                  <Badge className={statusColors[order.status]}>\n                    {statusLabels[order.status]}\n                  </Badge>\n                </TableCell>\n                <TableCell className=\"text-right\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => {\n                      setSelectedOrder(order);\n                      setIsDialogOpen(true);\n                    }}\n                  >\n                    <Eye className=\"h-4 w-4\" />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        {selectedOrder && (\n          <DialogContent className=\"max-w-2xl\">\n            <DialogHeader>\n              <DialogTitle>Détails de la commande #{String(selectedOrder.id).padStart(4, '0')}</DialogTitle>\n            </DialogHeader>\n            \n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Statut de la commande</h3>\n                  <Select\n                    value={selectedOrder.status}\n                    onValueChange={(value) => handleStatusUpdate(selectedOrder.id, value)}\n                  >\n                    <SelectTrigger className=\"w-[200px]\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {Object.entries(statusLabels).map(([key, label]) => (\n                        <SelectItem key={key} value={key}>\n                          {label}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-sm text-gray-500\">\n                    Commande passée le {format(new Date(selectedOrder.createdAt), 'PPp', { locale: fr })}\n                  </p>\n                </div>\n              </div>\n\n              <Card className=\"p-4\">\n                <h3 className=\"font-semibold mb-4\">Articles commandés</h3>\n                <div className=\"space-y-4\">\n                  {selectedOrder.items.map((item: any) => (\n                    <div key={item.id} className=\"flex justify-between\">\n                      <div>\n                        <p className=\"font-medium\">{item.name}</p>\n                        <p className=\"text-sm text-gray-500\">Qté: {item.quantity}</p>\n                      </div>\n                      <p className=\"font-medium\">{(item.price * item.quantity).toLocaleString()} FCFA</p>\n                    </div>\n                  ))}\n                  <Separator />\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Sous-total</span>\n                    <span>{(selectedOrder.total - selectedOrder.deliveryFee).toLocaleString()} FCFA</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Frais de livraison</span>\n                    <span>{selectedOrder.deliveryFee.toLocaleString()} FCFA</span>\n                  </div>\n                  <Separator />\n                  <div className=\"flex justify-between font-bold\">\n                    <span>Total</span>\n                    <span>{selectedOrder.total.toLocaleString()} FCFA</span>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-4\">\n                <h3 className=\"font-semibold mb-4\">Informations de livraison</h3>\n                <div className=\"space-y-2\">\n                  <p><span className=\"font-medium\">Nom:</span> {selectedOrder.shippingAddress.fullName}</p>\n                  <p><span className=\"font-medium\">Téléphone:</span> {selectedOrder.shippingAddress.phone}</p>\n                  <p><span className=\"font-medium\">Adresse:</span> {selectedOrder.shippingAddress.address}</p>\n                  <p><span className=\"font-medium\">Ville:</span> {selectedOrder.shippingAddress.city}</p>\n                  <p><span className=\"font-medium\">Zone:</span> {selectedOrder.shippingAddress.zone}</p>\n                </div>\n              </Card>\n            </div>\n          </DialogContent>\n        )}\n      </Dialog>\n    </div>\n  );\n}"],"names":["Eye","createLucideIcon","statusColors","statusLabels","AdminOrders","searchTerm","setSearchTerm","useState","selectedOrder","setSelectedOrder","isDialogOpen","setIsDialogOpen","orders","useGlobalStore","state","updateOrderStatus","useOrder","toast","useToast","filteredOrders","order","handleStatusUpdate","orderId","newStatus","jsxs","jsx","Search","Input","e","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","format","fr","Badge","Button","Dialog","DialogContent","DialogHeader","DialogTitle","Select","value","SelectTrigger","SelectValue","SelectContent","key","label","SelectItem","Card","item","Separator"],"mappings":"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","x_google_ignoreList":[0]}